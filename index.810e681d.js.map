{"mappings":"oeACAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,SCDAE,EAAAF,EAAA,S,aCAAC,EAAAD,EAAA,a,aAGAG,eAAeC,EAAiBC,GAC9B,GAA0B,QAAtBA,EAAEC,OAAOC,SACX,OAGF,MACMC,EADeH,EAAEC,OACMG,aAAa,MACpCC,QAAiB,EAAAT,EAAAU,gBAAeH,IACtC,EAAAI,EAAAC,uBAAsBH,E,CFNxB,MAAMI,EAAmBC,SAASC,cAAc,6BAE1CC,EAAeC,OAAOC,WAAa,IAAM,EAAI,GAInDhB,iBACE,MAAMO,QAAiB,EAAAT,EAAAmB,mBAEjBC,GCP0BC,EDMTZ,EAASa,QAAQC,MAAM,EAAGP,GCLlCK,EACZG,KACC,EAACC,UAAEA,EAASC,GAAEA,EAAEC,YAAEA,EAAWC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,MAClD,MAAMC,EAAOH,EAAaL,MAAM,EAAG,GAC7BS,EAAaL,EACf,kCAAkCA,IAClC,+BACEM,GAAoB,EAAAhC,EAAAiC,2BAA0BJ,GAEpD,MAAO,sJAGcE,oLAIwBN,gHAEHG,0DAV3B,EAAAM,EAAAC,qBAAoBX,GAAWY,KAAK,WAWCN,gGAEFE,iHAIpC,IAGjBI,KAAK,KA7BV,IAAkChB,EDQhCR,EAAiByB,UAAYlB,EAE7BP,EAAiB0B,iBAAiB,SAAUnC,IAAQD,EAAiBC,EAAE,G,CARzEoC,GGRAxC,EAAAD,EAAA,SCDAoC,EAAApC,EAAA,SAEA,SAAS0C,GAA8BC,cACrCA,EAAab,MACbA,EAAKJ,UACLA,EAASkB,SACTA,EAAQC,WACRA,EAAUjB,YACVA,EAAWC,aACXA,EAAYE,aACZA,EAAYe,WACZA,IAEA,MAAMC,GAAS,EAAAX,EAAAC,qBAAoBX,GAAWY,KAAK,MAEnD,MAAO,kFAE6CK,wHAIAA,uHAIAf,qJAKHA,oBACpCE,8GAKuBA,8ZASKD,mXAUUE,qIAEMe,2YAWdD,EAAWG,QAAQ,4TASnBD,+LAQjCH,kJ,EDhFZzC,iBACE,MACM8C,SADa,EAAAhD,EAAAiD,2BACQ3B,QACrB4B,EACJF,EAAcG,KAAKC,MAAMD,KAAKE,SAAWL,EAAcM,SAC9BxC,SAASC,cAAc,mBAC/BuB,UAAYG,EAA8BS,E,CAP/DK,G,YJOA,E,WAAAC,iBAEsB1C,SAAS2C,iBAAiB,sBAClCC,SAAQC,GAAKA,EAAEC,UAAUC,IAAI","sources":["src/index.js","src/js/trends.js","src/js/functions/generateMovieCardsMarkup.js","src/js/functions/onMovieCardClick.js","src/js/upcoming.js","src/js/functions/generateUpcomingSectionMarkup.js"],"sourcesContent":["// Index.js\nimport './js/header';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/trends';\nimport './js/upcoming';\nimport './js/footer';\nimport './js/modal-trailer';\nimport './js/modal-movie-details';\nimport { setGenresToSS } from './js/functions/setGenresToSS';\n\nsetGenresToSS();\n\nconst headerCurrent = document.querySelectorAll('[data-header-home]');\nheaderCurrent.forEach(i => i.classList.add('js-current'));\n\n","// Weekly trends js\nimport { fetchWeekTrends } from './functions/movieApiService';\nimport { generateMovieCardsMarkup } from './functions/generateMovieCardsMarkup';\nimport { onMovieCardClick } from './functions/onMovieCardClick';\n\nconst weeklyTrendsList = document.querySelector('[data-weekly-trends-list]');\n\nconst moviesNumber = window.innerWidth < 768 ? 1 : 3;\n\nrenderWeeklyTrendsItems();\n\nasync function renderWeeklyTrendsItems() {\n  const response = await fetchWeekTrends();\n  const moviesToRender = response.results.slice(0, moviesNumber);\n  const weeklyTrendsMarkup = generateMovieCardsMarkup(moviesToRender);\n  weeklyTrendsList.innerHTML = weeklyTrendsMarkup;\n\n  weeklyTrendsList.addEventListener('click', (e) => { onMovieCardClick(e) });\n}\n","import { generateRatingStarsMarkup } from './generateRatingStarsMarkup';\nimport { getGenresByGenresId } from './getGenresByGenresId';\n/**\n *\n * @param {Array} arr\n * @returns {String} markup for movie cards. You should insert resul inside <ul> by innerHTML\n */\nfunction generateMovieCardsMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ genre_ids, id, poster_path, release_date, title, vote_average }) => {\n        const year = release_date.slice(0, 4);\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/image-not-found.jpg';\n        const ratingStarsMurkup = generateRatingStarsMarkup(vote_average);\n        const genres = getGenresByGenresId(genre_ids).join(', ');\n        return `<li class=\"cards-item\">\n                  <button type=\"button\" class=\"btn cards-item-btn\">\n                    <img\n                      src=\"${posterPath}\"\n                      alt=\"Poster of the movie\"\n                      class=\"movie-card-poster\"\n                    />\n                    <div class=\"cards-content\" id=\"${id}\">\n                      <div class=\"cards-text-content\">\n                        <h3 class=\"cards-title\">${title}</h3>\n                        <p class=\"cards-text\">${genres} | ${year}</p>\n                      </div>\n                      <div class=\"rating-stars-wrapper\">${ratingStarsMurkup}\n                      </div>\n                    </div>\n                  </button>\n                </li>`;\n      }\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { generateMovieCardsMarkup };\n","import { fetchMovieById } from './movieApiService';\nimport { openModalMovieDetails } from './openModalMovieDetails';\n\nasync function onMovieCardClick(e) {\n  if (e.target.nodeName !== 'DIV') {\n    return;\n  }\n\n  const movieCardBtn = e.target;\n  const movieId = movieCardBtn.getAttribute('id');\n  const response = await fetchMovieById(movieId);\n  openModalMovieDetails(response);\n}\n\nexport { onMovieCardClick };\n","// Upcoming this month js\nimport { fetchUpcomingThisMonth } from './functions/movieApiService';\nimport { generateUpcomingSectionMarkup } from './functions/generateUpcomingSectionMarkup';\n\ngettingMovie();\nasync function gettingMovie() {\n  const data = await fetchUpcomingThisMonth();\n  const uncomingArray = data.results;\n  const randomMovie =\n    uncomingArray[Math.floor(Math.random() * uncomingArray.length)];\n  const upcomingConatainer = document.querySelector('[data-upcoming]');\n  upcomingConatainer.innerHTML = generateUpcomingSectionMarkup(randomMovie);\n}\n","import { getGenresByGenresId } from './getGenresByGenresId';\n\nfunction generateUpcomingSectionMarkup({\n  backdrop_path,\n  title,\n  genre_ids,\n  overview,\n  popularity,\n  poster_path,\n  release_date,\n  vote_average,\n  vote_count,\n}) {\n  const genres = getGenresByGenresId(genre_ids).join(', ');\n\n  return ` <picture>\n      <source\n        srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\"\n        media=\"(min-width:1280px)\"\n      />\n      <source\n        srcset=\"https://image.tmdb.org/t/p/original/${backdrop_path}\"\n        media=\"(min-width:768px)\"\n      />\n      <source\n        srcset=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n        media=\"(min-width:320px)\"\n      />\n      <img\n        class=\"upcoming-movie-img\"\n        src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n        alt=\"${title}\"\n      />\n    </picture>\n    \n    <div class=\"upcoming-column\">\n      <h2 class=\"upcoming-headline\">${title}</h2>\n      <div class=\"upcoming-wrap\">\n        <div class=\"upcoming-inner-wrap\">\n          <div class=\"upcoming-wrapper upcoming-wrapper-gap\">\n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-data\">\n                <p class=\"upcoming-subject\">Release date</p>\n              </li>\n              <li class=\"upcoming-item-data-num\">\n                <p class=\"upcoming-date\">${release_date}</p>\n              </li>\n            </ul>\n    \n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-vote\">\n                <p class=\"upcoming-subject\">Vote / Votes</p>\n              </li>\n              <li class=\"upcoming-item-vote-num\">\n                <p class=\"upcoming-vote\">\n                  <span class=\"upcoming-inner-box\">${vote_average}</span>\n                  <span class=\"upcoming-inner-color\">/</span>\n                  <span class=\"upcoming-inner-box-votes\">${vote_count}</span>\n                </p>\n              </li>\n            </ul>\n          </div>\n          <div class=\"upcoming-wrapper\">\n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-pop\">\n                <p class=\"upcoming-subject\">Popularity</p>\n              </li>\n              <li class=\"upcoming-item-pop-num\">\n                <p class=\"upcoming-famous\">${popularity.toFixed(1)}</p>\n              </li>\n            </ul>\n    \n            <ul class=\"upcoming-list\">\n              <li class=\"upcoming-item-genre\">\n                <p class=\"upcoming-subject\">Genre</p>\n              </li>\n              <li class=\"upcoming-item-genre-num\">\n                <p class=\"upcoming-janres\">${genres}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n    \n        <h3 class=\"upcoming-caption\">About</h3>\n        <p class=\"upcoming-description\">\n          ${overview}\n        </p>\n        <button class=\"btn btn-filled\" type=\"button\">\n          Add to my library\n        </button>\n      </div>\n    </div>`;\n}\n\nexport { generateUpcomingSectionMarkup };\n"],"names":["parcelRequire","$ffJBb","$aNFDY","async","$812d1721f4b6d014$export$2d08c7f0d0e4b2d5","e","target","nodeName","movieId","getAttribute","response","fetchMovieById","$kICWm","openModalMovieDetails","$69f116c65cf4dd06$var$weeklyTrendsList","document","querySelector","$69f116c65cf4dd06$var$moviesNumber","window","innerWidth","fetchWeekTrends","weeklyTrendsMarkup","arr","results","slice","map","genre_ids","id","poster_path","release_date","title","vote_average","year","posterPath","ratingStarsMurkup","generateRatingStarsMarkup","$2ZOXv","getGenresByGenresId","join","innerHTML","addEventListener","$69f116c65cf4dd06$var$renderWeeklyTrendsItems","$b6c3995dc8b8a0c5$export$38eb1fd69e84b0a","backdrop_path","overview","popularity","vote_count","genres","toFixed","uncomingArray","fetchUpcomingThisMonth","randomMovie","Math","floor","random","length","$65414923e0a79c46$var$gettingMovie","setGenresToSS","querySelectorAll","forEach","i","classList","add"],"version":3,"file":"index.810e681d.js.map"}