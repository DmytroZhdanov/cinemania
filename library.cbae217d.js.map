{"mappings":"gfACAA,EAAA,S,sBCDA,IAAAC,EAAAD,EAAA,S,aAOA,SAASE,EAAyBC,GA+BhC,OA9BeA,EACZC,KACC,SAAAC,G,IAAGC,EAASD,EAATC,UAAWC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YAAaC,EAAYJ,EAAZI,aAAcC,EAAKL,EAALK,MAAOC,EAAYN,EAAZM,aAC5CC,EAAOH,EAAaI,MAAM,EAAG,GAC7BC,EAAaN,EACf,kCAA8CO,OAAZP,GAClC,+BACEQ,GAAoB,EAAAf,EAAAgB,2BAA0BN,GAC9CO,GAAS,EAAAC,EAAAC,qBAAoBd,GAAWe,KAAK,MACnD,MAAO,sJAOsCN,OAJxBD,EAAW,oLAMUC,OAFGR,EAAG,gHAGRQ,OADEL,EAAM,yDACIK,OAAZG,EAAO,OAEGH,OAFEH,EAAK,gGAEWG,OAAlBC,EAAkB,iH,IAOvEK,KAAK,G,CCjCV,IAAMC,EAAO,CACXC,iBAAkBC,SAASC,cAAc,uBACzCC,gBAAiBF,SAASC,cAAc,4BACxCE,wBAAyBC,KAAKC,MAAMC,aAAaC,QAAQ,aAIvDC,EAAmBV,EAAKK,wBACxBM,KAAKC,KAAKZ,EAAKK,wBAAwBQ,OAAS,GAChD,EACAC,EAAa,EA4CjB,SAASC,EAAmBC,EAAOC,GACjC,OAAOD,EAAMzB,MAAM,EAAI0B,EAAG,EAAIA,EAAI,E,CA1C/BjB,EAAKK,yBAA4BL,EAAKK,wBAAwBQ,OAI7DH,GAAoB,GACtBV,EAAKC,iBAAiBiB,UAAYtC,EAChCoB,EAAKK,yBAEPL,EAAKC,iBAAiBkB,UAAUC,IAAI,0BAIpCpB,EAAKC,iBAAiBiB,UAAYtC,EAChCmC,EAAmBf,EAAKK,wBAAyBS,IAwDrDd,EAAKC,iBAAiBoB,mBACpB,WACC,6PAtDDP,GAAc,EAEdd,EAAKC,iBAAiBkB,UAAUC,IAAI,wBAEpCE,mBAAqBpB,SAASC,cAAc,wBAC5CmB,mBAAmBC,iBAAiB,SAuBxC,WAEMb,IAAqBI,EAAa,GACpCd,EAAKC,iBAAiBoB,mBACpB,YACAzC,EACEmC,EAAmBf,EAAKK,wBAAyBS,KAIrDQ,mBAAmBH,UAAUC,IAAI,eAGjCpB,EAAKC,iBAAiBoB,mBACpB,YACAzC,EACEmC,EAAmBf,EAAKK,wBAAyBS,KAGrDA,GAAc,E,MArChBd,EAAKI,gBAAgBc,UAAa,6QAUlClB,EAAKI,gBAAgBe,UAAUC,IAAI,yB,YF7CrC,E,WAAAI,iBAEyBtB,SAASuB,iBAAiB,yBAClCC,SAAQ,SAAAC,G,OAAKA,EAAER,UAAUC,IAAI,a","sources":["src/library.js","src/js/functions/generateMovieCardsMarkup.js","src/js/list-library.js"],"sourcesContent":["// Library js\nimport './js/header';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/list-library';\nimport './js/footer';\nimport { setGenresToSS } from './js/functions/setGenresToSS';\n\nsetGenresToSS();\n\nconst headerLibCurrent = document.querySelectorAll('[data-header-library]');\nheaderLibCurrent.forEach(i => i.classList.add('js-current'));\n","import { generateRatingStarsMarkup } from './generateRatingStarsMarkup';\nimport { getGenresByGenresId } from './getGenresByGenresId';\n/**\n *\n * @param {Array} arr\n * @returns {String} markup for movie cards. You should insert resul inside <ul> by innerHTML\n */\nfunction generateMovieCardsMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ genre_ids, id, poster_path, release_date, title, vote_average }) => {\n        const year = release_date.slice(0, 4);\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/image-not-found.jpg';\n        const ratingStarsMurkup = generateRatingStarsMarkup(vote_average);\n        const genres = getGenresByGenresId(genre_ids).join(', ');\n        return `<li class=\"cards-item\">\n                  <button type=\"button\" class=\"btn cards-item-btn\">\n                    <img\n                      src=\"${posterPath}\"\n                      alt=\"Poster of the movie\"\n                      class=\"movie-card-poster\"\n                    />\n                    <div class=\"cards-content\" id=\"${id}\">\n                      <div class=\"cards-text-content\">\n                        <h3 class=\"cards-title\">${title}</h3>\n                        <p class=\"cards-text\">${genres} | ${year}</p>\n                      </div>\n                      <div class=\"rating-stars-wrapper\">${ratingStarsMurkup}\n                      </div>\n                    </div>\n                  </button>\n                </li>`;\n      }\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { generateMovieCardsMarkup };\n","// Library Page - Library list section\nimport { generateMovieCardsMarkup } from './functions/generateMovieCardsMarkup';\n\nconst refs = {\n  libraryMovieList: document.querySelector('[data-library-list]'),\n  libraryOppsText: document.querySelector('[data-library-oops-text]'),\n  LibraryFromLocalStorage: JSON.parse(localStorage.getItem('library')),\n};\n\n//================Сount how many pages we have with cards==============================\nlet totalLibraryPage = refs.LibraryFromLocalStorage\n  ? Math.ceil(refs.LibraryFromLocalStorage.length / 9)\n  : 0;\nlet curentPage = 0;\n\n//================Check LocalStorage====================================================\nif (!refs.LibraryFromLocalStorage || !refs.LibraryFromLocalStorage.length) {\n  renderLibraryOppsText();\n} else {\n  //==============if total page < 1 - render first page without button==================\n  if (totalLibraryPage <= 1) {\n    refs.libraryMovieList.innerHTML = generateMovieCardsMarkup(\n      refs.LibraryFromLocalStorage\n    );\n    refs.libraryMovieList.classList.add('movie-cards-list-css');\n  } else {\n    //==============if page > 1 - render first page and Button \"load more\"==============\n\n    refs.libraryMovieList.innerHTML = generateMovieCardsMarkup(\n      renderNumberOfCard(refs.LibraryFromLocalStorage, curentPage)\n    );\n\n    renderButtonLoadMore();\n    curentPage += 1;\n\n    refs.libraryMovieList.classList.add('movie-cards-list-css');\n    //==================set event on Button \"Load more\"==================================\n    libraryLoadMoreBtn = document.querySelector('[data-load-more-btn]');\n    libraryLoadMoreBtn.addEventListener('click', renderLoadMoreCard);\n  }\n}\n\nfunction renderLibraryOppsText() {\n  refs.libraryOppsText.innerHTML = `\n      <p>OOPS...<br>\n      We are very sorry!<br>\n      You don’t have any movies at your library.</p>\n        <div class=\"btn-list-search\">\n        <a  href=\"./catalogue.html\" class=\"btn btn-filled\">\n        Search movie\n        </a>\n        </div>\n      `;\n  refs.libraryOppsText.classList.add('library-ops-text-css');\n}\n\n//====================make arrayCard for every page=================================\nfunction renderNumberOfCard(array, n) {\n  return array.slice(9 * n, 9 * n + 9);\n}\n\nfunction renderLoadMoreCard() {\n  // =================if the last page is left - render and hide the button============\n  if (totalLibraryPage === curentPage + 1) {\n    refs.libraryMovieList.insertAdjacentHTML(\n      'beforeend',\n      generateMovieCardsMarkup(\n        renderNumberOfCard(refs.LibraryFromLocalStorage, curentPage)\n      )\n    );\n\n    libraryLoadMoreBtn.classList.add('is-hidden');\n  } else {\n    //=================render next page and add +1 to  cuontpage=======================\n    refs.libraryMovieList.insertAdjacentHTML(\n      'beforeend',\n      generateMovieCardsMarkup(\n        renderNumberOfCard(refs.LibraryFromLocalStorage, curentPage)\n      )\n    );\n    curentPage += 1;\n  }\n}\n\nfunction renderButtonLoadMore() {\n  refs.libraryMovieList.insertAdjacentHTML(\n    'afterend',\n    `\n                      <div class=\"btn-list-search\">\n                          <button type=\"button\" class=\"btn btn-filled\" data-load-more-btn>\n                          Load more\n                          </button>\n                      </div>`\n  );\n}\n"],"names":["parcelRequire","$6xLQz","$1d88a178c3dff592$export$a0216a755aabdce4","arr","map","param","genre_ids","id","poster_path","release_date","title","vote_average","year","slice","posterPath","concat","ratingStarsMurkup","generateRatingStarsMarkup","genres","$4cCwH","getGenresByGenresId","join","$164d6b9b3e69aac3$var$refs","libraryMovieList","document","querySelector","libraryOppsText","LibraryFromLocalStorage","JSON","parse","localStorage","getItem","$164d6b9b3e69aac3$var$totalLibraryPage","Math","ceil","length","$164d6b9b3e69aac3$var$curentPage","$164d6b9b3e69aac3$var$renderNumberOfCard","array","n","innerHTML","classList","add","insertAdjacentHTML","libraryLoadMoreBtn","addEventListener","setGenresToSS","querySelectorAll","forEach","i"],"version":3,"file":"library.cbae217d.js.map"}