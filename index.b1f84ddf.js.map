{"mappings":"oeACAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,SCDAE,EAAAF,EAAA,S,aCAAC,EAAAD,EAAA,a,aAGAG,eAAeC,EAAiBC,GAC9B,GAA0B,QAAtBA,EAAEC,OAAOC,SACX,OAGF,MACMC,EADeH,EAAEC,OACMG,aAAa,MACpCC,QAAiB,EAAAT,EAAAU,gBAAeH,IACtC,EAAAI,EAAAC,uBAAsBH,E,CFNxB,MAAMI,EAAmBC,SAASC,cAAc,6BAE1CC,EAAeC,OAAOC,WAAa,IAAM,EAAI,GAInDhB,iBACE,MAAMO,QAAiB,EAAAT,EAAAmB,mBAEjBC,GCP0BC,EDMTZ,EAASa,QAAQC,MAAM,EAAGP,GCLlCK,EACZG,KACC,EAACC,UAAEA,EAASC,GAAEA,EAAEC,YAAEA,EAAWC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,MAClD,MAAMC,EAAOH,EAAaL,MAAM,EAAG,GAC7BS,EAAaL,EACf,kCAAkCA,IAClC,+BACEM,GAAoB,EAAAhC,EAAAiC,2BAA0BJ,GAEpD,MAAO,sJAGcE,oLAIwBN,gHAEHG,0DAV3B,EAAAM,EAAAC,qBAAoBX,GAAWY,KAAK,WAWCN,gGAEFE,iHAIpC,IAGjBI,KAAK,KA7BV,IAAkChB,EDQhCR,EAAiByB,UAAYlB,EAE7BP,EAAiB0B,iBAAiB,SAAUnC,IAAQD,EAAiBC,EAAE,G,CARzEoC,G,YDEA,E,WAAAC,iBAEsB3B,SAAS4B,iBAAiB,sBAClCC,SAAQC,GAAKA,EAAEC,UAAUC,IAAI","sources":["src/index.js","src/js/trends.js","src/js/functions/generateMovieCardsMarkup.js","src/js/functions/onMovieCardClick.js"],"sourcesContent":["// Index.js\nimport './js/header';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/trends';\nimport './js/upcoming';\nimport './js/footer';\nimport './js/modal-trailer';\nimport './js/modal-movie-details';\nimport { setGenresToSS } from './js/functions/setGenresToSS';\n\nsetGenresToSS();\n\nconst headerCurrent = document.querySelectorAll('[data-header-home]');\nheaderCurrent.forEach(i => i.classList.add('js-current'));\n\n","// Weekly trends js\nimport { fetchWeekTrends } from './functions/movieApiService';\nimport { generateMovieCardsMarkup } from './functions/generateMovieCardsMarkup';\nimport { onMovieCardClick } from './functions/onMovieCardClick';\n\nconst weeklyTrendsList = document.querySelector('[data-weekly-trends-list]');\n\nconst moviesNumber = window.innerWidth < 768 ? 1 : 3;\n\nrenderWeeklyTrendsItems();\n\nasync function renderWeeklyTrendsItems() {\n  const response = await fetchWeekTrends();\n  const moviesToRender = response.results.slice(0, moviesNumber);\n  const weeklyTrendsMarkup = generateMovieCardsMarkup(moviesToRender);\n  weeklyTrendsList.innerHTML = weeklyTrendsMarkup;\n\n  weeklyTrendsList.addEventListener('click', (e) => { onMovieCardClick(e) });\n}\n","import { generateRatingStarsMarkup } from './generateRatingStarsMarkup';\nimport { getGenresByGenresId } from './getGenresByGenresId';\n/**\n *\n * @param {Array} arr\n * @returns {String} markup for movie cards. You should insert resul inside <ul> by innerHTML\n */\nfunction generateMovieCardsMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ genre_ids, id, poster_path, release_date, title, vote_average }) => {\n        const year = release_date.slice(0, 4);\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/image-not-found.jpg';\n        const ratingStarsMurkup = generateRatingStarsMarkup(vote_average);\n        const genres = getGenresByGenresId(genre_ids).join(', ');\n        return `<li class=\"cards-item\">\n                  <button type=\"button\" class=\"btn cards-item-btn\">\n                    <img\n                      src=\"${posterPath}\"\n                      alt=\"Poster of the movie\"\n                      class=\"movie-card-poster\"\n                    />\n                    <div class=\"cards-content\" id=\"${id}\">\n                      <div class=\"cards-text-content\">\n                        <h3 class=\"cards-title\">${title}</h3>\n                        <p class=\"cards-text\">${genres} | ${year}</p>\n                      </div>\n                      <div class=\"rating-stars-wrapper\">${ratingStarsMurkup}\n                      </div>\n                    </div>\n                  </button>\n                </li>`;\n      }\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { generateMovieCardsMarkup };\n","import { fetchMovieById } from './movieApiService';\nimport { openModalMovieDetails } from './openModalMovieDetails';\n\nasync function onMovieCardClick(e) {\n  if (e.target.nodeName !== 'DIV') {\n    return;\n  }\n\n  const movieCardBtn = e.target;\n  const movieId = movieCardBtn.getAttribute('id');\n  const response = await fetchMovieById(movieId);\n  openModalMovieDetails(response);\n}\n\nexport { onMovieCardClick };\n"],"names":["parcelRequire","$ffJBb","$aNFDY","async","$812d1721f4b6d014$export$2d08c7f0d0e4b2d5","e","target","nodeName","movieId","getAttribute","response","fetchMovieById","$kICWm","openModalMovieDetails","$69f116c65cf4dd06$var$weeklyTrendsList","document","querySelector","$69f116c65cf4dd06$var$moviesNumber","window","innerWidth","fetchWeekTrends","weeklyTrendsMarkup","arr","results","slice","map","genre_ids","id","poster_path","release_date","title","vote_average","year","posterPath","ratingStarsMurkup","generateRatingStarsMarkup","$2ZOXv","getGenresByGenresId","join","innerHTML","addEventListener","$69f116c65cf4dd06$var$renderWeeklyTrendsItems","setGenresToSS","querySelectorAll","forEach","i","classList","add"],"version":3,"file":"index.b1f84ddf.js.map"}