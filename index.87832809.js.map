{"mappings":"iiBACAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,0BCDAE,EAAAF,EAAA,S,aAOA,SAASG,EAAyBC,GA+BhC,OA9BeA,EACZC,KACC,SAAAC,G,IAAGC,EAASD,EAATC,UAAWC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YAAaC,EAAYJ,EAAZI,aAAcC,EAAKL,EAALK,MAAOC,EAAYN,EAAZM,aAC5CC,EAAOH,EAAaI,MAAM,EAAG,GAC7BC,EAAaN,EACf,kCAA8CO,OAAZP,GAClC,+BACEQ,GAAoB,EAAAf,EAAAgB,2BAA0BN,GAC9CO,GAAS,EAAAC,EAAAC,qBAAoBd,GAAWe,KAAK,MACnD,MAAO,sJAOsCN,OAJxBD,EAAW,oLAMUC,OAFGR,EAAG,gHAGRQ,OADEL,EAAM,yDACIK,OAAZG,EAAO,OAEGH,OAFEH,EAAK,gGAEWG,OAAlBC,EAAkB,iH,IAOvEK,KAAK,G,CCpCVrB,EAAAD,EAAA,S,0BAAA,I,sBAGeuB,EAAiBC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,UAAhBH,I,OAAAA,EAAfI,EAAA5B,EAAA,CAAA4B,EAAAC,GAAAC,MAAA,SAAAC,EAAgCR,G,IAKxBS,EACAC,EACAC,E,qEANoB,QAAtBX,EAAEY,OAAOC,SAAkB,C,uDAIzBJ,EAAeT,EAAEY,OACjBF,EAAUD,EAAaK,aAAa,M,UACnB,EAAAC,EAAAC,gBAAeN,G,OAAhCC,EAAQM,EAAAC,MACd,EAAAC,EAAAC,uBAAsBT,G,4CAROT,MAAAC,KAAAC,U,CFE/B,IAAMiB,EAAmBC,SAASC,cAAc,6BAE1CC,EAAeC,OAAOC,WAAa,IAAM,EAAI,E,SAIpCC,I,OAAAA,EAAftB,EAAA5B,EAAA,CAAA4B,EAAAC,GAAAC,MAAA,SAAAC,I,IACQG,EACAiB,EACAC,E,mFAFiB,EAAAd,EAAAe,mB,OAAjBnB,EAAQM,EAAAC,KACRU,EAAiBjB,EAASoB,QAAQzC,MAAM,EAAGkC,GAC3CK,EAAqBlD,EAAyBiD,GACpDP,EAAiBW,UAAYH,EAE7BR,EAAiBY,iBAAiB,SAAS,SAACjC,GAAQD,EAAiBC,E,gDANjCE,MAAAC,KAAAC,U,aAAvBuB,EAAuBzB,MAAAC,KAAAC,U,CAFtC8B,G,YDEA,E,WAAAC,iBAEsBb,SAASc,iBAAiB,sBAClCC,SAAQ,SAAAC,G,OAAKA,EAAEC,UAAUC,IAAI,a","sources":["src/index.js","src/js/trends.js","src/js/functions/generateMovieCardsMarkup.js","src/js/functions/onMovieCardClick.js"],"sourcesContent":["// Index.js\nimport './js/header';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/trends';\nimport './js/upcoming';\nimport './js/footer';\nimport './js/modal-trailer';\nimport './js/modal-movie-details';\nimport { setGenresToSS } from './js/functions/setGenresToSS';\n\nsetGenresToSS();\n\nconst headerCurrent = document.querySelectorAll('[data-header-home]');\nheaderCurrent.forEach(i => i.classList.add('js-current'));\n\n","// Weekly trends js\nimport { fetchWeekTrends } from './functions/movieApiService';\nimport { generateMovieCardsMarkup } from './functions/generateMovieCardsMarkup';\nimport { onMovieCardClick } from './functions/onMovieCardClick';\n\nconst weeklyTrendsList = document.querySelector('[data-weekly-trends-list]');\n\nconst moviesNumber = window.innerWidth < 768 ? 1 : 3;\n\nrenderWeeklyTrendsItems();\n\nasync function renderWeeklyTrendsItems() {\n  const response = await fetchWeekTrends();\n  const moviesToRender = response.results.slice(0, moviesNumber);\n  const weeklyTrendsMarkup = generateMovieCardsMarkup(moviesToRender);\n  weeklyTrendsList.innerHTML = weeklyTrendsMarkup;\n\n  weeklyTrendsList.addEventListener('click', (e) => { onMovieCardClick(e) });\n}\n","import { generateRatingStarsMarkup } from './generateRatingStarsMarkup';\nimport { getGenresByGenresId } from './getGenresByGenresId';\n/**\n *\n * @param {Array} arr\n * @returns {String} markup for movie cards. You should insert resul inside <ul> by innerHTML\n */\nfunction generateMovieCardsMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ genre_ids, id, poster_path, release_date, title, vote_average }) => {\n        const year = release_date.slice(0, 4);\n        const posterPath = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/image-not-found.jpg';\n        const ratingStarsMurkup = generateRatingStarsMarkup(vote_average);\n        const genres = getGenresByGenresId(genre_ids).join(', ');\n        return `<li class=\"cards-item\">\n                  <button type=\"button\" class=\"btn cards-item-btn\">\n                    <img\n                      src=\"${posterPath}\"\n                      alt=\"Poster of the movie\"\n                      class=\"movie-card-poster\"\n                    />\n                    <div class=\"cards-content\" id=\"${id}\">\n                      <div class=\"cards-text-content\">\n                        <h3 class=\"cards-title\">${title}</h3>\n                        <p class=\"cards-text\">${genres} | ${year}</p>\n                      </div>\n                      <div class=\"rating-stars-wrapper\">${ratingStarsMurkup}\n                      </div>\n                    </div>\n                  </button>\n                </li>`;\n      }\n    )\n    .join('');\n\n  return markup;\n}\n\nexport { generateMovieCardsMarkup };\n","import { fetchMovieById } from './movieApiService';\nimport { openModalMovieDetails } from './openModalMovieDetails';\n\nasync function onMovieCardClick(e) {\n  if (e.target.nodeName !== 'DIV') {\n    return;\n  }\n\n  const movieCardBtn = e.target;\n  const movieId = movieCardBtn.getAttribute('id');\n  const response = await fetchMovieById(movieId);\n  openModalMovieDetails(response);\n}\n\nexport { onMovieCardClick };\n"],"names":["parcelRequire","$bpxeT","$6xLQz","$1d88a178c3dff592$export$a0216a755aabdce4","arr","map","param","genre_ids","id","poster_path","release_date","title","vote_average","year","slice","posterPath","concat","ratingStarsMurkup","generateRatingStarsMarkup","genres","$4cCwH","getGenresByGenresId","join","$f10fa329a6f848e9$export$2d08c7f0d0e4b2d5","e","$f10fa329a6f848e9$var$_onMovieCardClick","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","movieCardBtn","movieId","response","target","nodeName","getAttribute","$iM4cy","fetchMovieById","_ctx","sent","$csoLP","openModalMovieDetails","$f172d719fa79b29b$var$weeklyTrendsList","document","querySelector","$f172d719fa79b29b$var$moviesNumber","window","innerWidth","$f172d719fa79b29b$var$_renderWeeklyTrendsItems","moviesToRender","weeklyTrendsMarkup","fetchWeekTrends","results","innerHTML","addEventListener","$f172d719fa79b29b$var$renderWeeklyTrendsItems","setGenresToSS","querySelectorAll","forEach","i","classList","add"],"version":3,"file":"index.87832809.js.map"}