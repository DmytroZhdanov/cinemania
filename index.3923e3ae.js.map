{"mappings":"osBACAA,EAAA,S,gICDA,IAAAC,EAAAD,EAAA,S,mCAMeE,EAAoBC,G,OAApBC,EAAmBC,MAAAC,KAAAC,U,UAAnBH,I,OAAAA,EAAfI,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,EAAmCR,G,IAC3BS,EAEAC,E,mFAFiB,EAAAC,EAAAC,mB,cAAjBH,EAAQI,EAAAC,KAERJ,EAASV,EAAae,KAAI,SAAAC,GAG9B,OAFsBP,EAASC,OAAOO,MAAK,SAAAC,G,OAAUA,EAAOF,KAAOA,C,IAE9CG,I,sBAGhBT,G,4CATyBR,MAAAC,KAAAC,U,uCCClC,SAASgB,EAAyBC,EAASC,GACzC,IAAMC,EAAiBC,aAAaC,QAAQC,SAK5C,OAJ6BC,KAAKC,MAAML,GACCN,MACvC,SAAAC,G,OAAUA,EAAOF,KAAOM,C,IAIjB,6DAAqEO,OAARR,EAAQ,kCAGrE,wDAAgEQ,OAARR,EAAQ,4B,qGCX3E,SAASS,EAAqBC,GAC5B,GAAKP,aAAaC,QAAQC,SAInB,CACL,IAAMH,EAAiBC,aAAaC,QAAQC,SACtCM,EAAYL,KAAKC,MAAML,GAC7BS,EAAUC,KAAKF,GACfP,aAAaU,QAAQ,UAAWP,KAAKQ,UAAUH,G,KARb,CAClC,IAAMI,EAAQ,GACdA,EAAMH,KAAKF,GACXP,aAAaU,QAAQ,UAAWP,KAAKQ,UAAUC,G,kGCFnD,SAASC,EAAwBN,GAC/B,IAAMR,EAAiBC,aAAaC,QAAQC,SAEtCY,EADYX,KAAKC,MAAML,GACIgB,QAAO,SAAAC,G,OAASA,EAAMxB,KAAOe,EAAYf,E,IAC1EQ,aAAaU,QAAQ,UAAWP,KAAKQ,UAAUG,G","sources":["src/js/modal-movie-details.js","src/js/functions/getGenresByGenresId.js","src/js/functions/generateLibraryBtnMarkup.js","src/js/functions/onLibraryBtnAddClick.js","src/js/functions/onLibraryBtnRemoveClick.js"],"sourcesContent":["// Modal window for movie details\nimport { getGenresByGenresId } from './functions/getGenresByGenresId';\nimport { generateLibraryBtnMarkup } from './functions/generateLibraryBtnMarkup';\nimport { onLibraryBtnAddClick } from './functions/onLibraryBtnAddClick';\nimport { onLibraryBtnRemoveClick } from './functions/onLibraryBtnRemoveClick';\n\n/**\n * Opens modal window with movie details\n * @param {Object} Object Movie object\n */\nfunction openModalMovieDetails({\n  poster_path,\n  title,\n  overview,\n  vote_average,\n  vote_count,\n  popularity,\n  genre_ids,\n  id,\n}) {\n  const modalMovieDetails = document.querySelector('[data-modal-details]');\n  const genres = getGenresByGenresId(genre_ids);\n  const libraryBtn = generateLibraryBtnMarkup(id);\n\n  modalMovieDetails.innerHTML = `<div class=\"modal-details\">\n            <button type=\"button\" class=\"btn modal-close\" data-modal-details-close>\n                <svg class=\"icon-close\" width=\"10.5\" height=\"10.5\">\n                    <use href=\"./images/icons.svg#icon-close\"></use>\n                </svg>\n            </button>\n            <img src=\"${poster_path}\" />\n            <h2>${title}</h2>\n            <h3>Vote / Votes</h3>\n            <p><span>${vote_average}</span> / <span>${vote_count}</span></p>\n            <h3>Popularity</h3>\n            <p>${popularity}</p>\n            <h3>Genre</h3>\n            <p class='modal-genre'>${genres}</p>\n            <h3>About</h3>\n            <p>${overview}</p>\n            ${libraryBtn}\n        </div>`;\n\n  const libraryBtnAdd = document.querySelector('[data-add-to-library-btn]');\n  const libraryBtnRemove = document.querySelector(\n    '[data-remove-from-library-btn]'\n  );\n  const modalDetailsCloseBtn = document.querySelector(\n    '[data-modal-details-close]'\n  );\n    \n  modalMovieDetails.classList.remove('is-hidden');\n  libraryBtnAdd.addEventListener('click', onLibraryBtnAddClick);\n  libraryBtnRemove.addEventListener('click', onLibraryBtnRemoveClick);\n  modalDetailsCloseBtn.addEventListener('click', () => {\n    modalMovieDetails.classList.add('is-hidden');\n  });\n}\n\nexport { openModalMovieDetails };\n","import { fetchGenresList } from './movieApiService';\n/**\n *\n * @param {Array} genresIdsArr Array of genres_ids\n * @returns {Promise} Promise with array of genres (strings) as a result\n */\nasync function getGenresByGenresId(genresIdsArr) {\n  const response = await fetchGenresList();\n\n  const genres = genresIdsArr.map(id => {\n    const genresObjects = response.genres.find(object => object.id === id);\n\n    return genresObjects.name;\n  });\n\n  return genres;\n}\n\nexport { getGenresByGenresId };\n","/**\n *\n * @param {Object} classes Classes to add to button\n * @param {String} movieId Movie ID\n * @returns {String} Button markup\n */\n\nfunction generateLibraryBtnMarkup(classes, movieId) {\n  const filmsInLibrary = localStorage.getItem(library);\n  const parsedFilmsInLibrary = JSON.parse(filmsInLibrary);\n  const isInLibrary = parsedFilmsInLibrary.find(\n    object => object.id === movieId\n  );\n  if (isInLibrary) {\n    /* Remove button */\n    return `<button type=\"button\" data-remove-from-library-btn class=\"${classes}\">Remove from library</button>`;\n  } else {\n    /* Add button */\n    return `<button type=\"button\" data-add-to-library-btn class=\"${classes}\">Add to library</button>`;\n  }\n}\n\nexport { generateLibraryBtnMarkup };\n","// const libraryBtnAdd = document.querySelector('[data-add-to-library-btn]');\n// libraryBtnAdd.addEventListener('click', onAddLibraryBtnClick);\n\n/**\n * Sets local storage item with key 'library' and value of Array of movie objects. Adds Item\n * @param {Object} movieObject  Object with movie details\n */\nfunction onLibraryBtnAddClick(movieObject) {\n  if (!localStorage.getItem(library)) {\n    const array = [];\n    array.push(movieObject);\n    localStorage.setItem('library', JSON.stringify(array));\n  } else {\n    const filmsInLibrary = localStorage.getItem(library);\n    const moviesArr = JSON.parse(filmsInLibrary);\n    moviesArr.push(movieObject);\n    localStorage.setItem('library', JSON.stringify(moviesArr));\n  }\n}\n\nexport { onLibraryBtnAddClick };\n","// const libraryBtnRemove = document.querySelector(\n//   '[data-remove-from-library-btn]'\n// );\n// libraryBtnRemove.addEventListener('click', removeFromLibrary);\n\n/**\n * Sets local storage item with key 'library' and value of Array of movie objects. Removes item\n * @param {*} movieObject \n */\nfunction onLibraryBtnRemoveClick(movieObject) {\n  const filmsInLibrary = localStorage.getItem(library);\n  const moviesArr = JSON.parse(filmsInLibrary);\n  const newMoviesArray = moviesArr.filter(value => value.id !== movieObject.id);\n  localStorage.setItem('library', JSON.stringify(newMoviesArray));\n}\n\nexport { onLibraryBtnRemoveClick };\n"],"names":["parcelRequire","$bpxeT","$30f62afa0432d6ce$export$d01ede1d0fdc2a9b","genresIdsArr","$30f62afa0432d6ce$var$_getGenresByGenresId","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","genres","$iM4cy","fetchGenresList","_ctx","sent","map","id","find","object","name","$bd08bbff1945af53$export$e3e109041f9f179f","classes","movieId","filmsInLibrary","localStorage","getItem","library","JSON","parse","concat","$e8b73fef852db7f8$export$11679713ab79fae","movieObject","moviesArr","push","setItem","stringify","array","$3398fc96f631948d$export$2d9da69b85782986","newMoviesArray","filter","value"],"version":3,"file":"index.3923e3ae.js.map"}